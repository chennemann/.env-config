#Copyright (C) 2016 Christoph Hennemann
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


CLONE="git clone"
alias cl=$CLONE
alias clone=$CLONE


SIMPLE_STATUS="git status"
alias ss=$SIMPLE_STATUS
__git_complete ss _git_status


STATUS="git fetch && git status"
alias s=$STATUS
alias stat=$STATUS
alias stats=$STATUS
alias statsu=$STATUS
alias status=$STATUS


FETCH="git fetch --all --prune && git branch --all"
alias f=$FETCH
__git_complete f _git_fetch
alias fetch=$FETCH
__git_complete fetch _git_fetch


PULL="git pull"
alias p=$PULL
__git_complete p _git_pull
alias pll=$PULL
__git_complete pll _git_pull
alias pull=$PULL
__git_complete pull _git_pull


PUSH="git push"
alias psh=$PUSH
__git_complete psh _git_push
alias push=$PUSH
__git_complete push _git_push


PUSH_ORIGIN="git push -u origin"
alias po=$PUSH_ORIGIN
__git_complete po _git_push
alias psho=$PUSH_ORIGIN
__git_complete psho _git_push
alias pshorig=$PUSH_ORIGIN
__git_complete pshorig _git_push
alias pusho=$PUSH_ORIGIN
__git_complete pusho _git_push
alias pushorig=$PUSH_ORIGIN
__git_complete pushorig _git_push
alias pushorigin=$PUSH_ORIGIN
__git_complete pushorigin _git_push


BRANCH="git branch --all"
alias b=$BRANCH
alias branch=$BRANCH
alias lbranch=$BRANCH


RENAME_BRANCH="git branch -m"
alias rb=$RENAME_BRANCH
alias rename=$RENAME_BRANCH
alias renameb=$RENAME_BRANCH
alias renamebranch=$RENAME_BRANCH
alias rename_branch=$RENAME_BRANCH


DELETE_BRANCH="git branch -d"
alias db=$DELETE_BRANCH
__git_complete db _git_branch
alias deleteb=$DELETE_BRANCH
__git_complete deleteb _git_branch


FORCE_DELETE_BRANCH="git branch -D"
alias DB=$FORCE_DELETE_BRANCH
__git_complete DB _git_branch
alias dbf=$FORCE_DELETE_BRANCH
__git_complete dbf _git_branch


cbp()
{
	git checkout -b $1 && git push -u origin $1 && git status
}
export -f cbp

CREATE_BRANCH="cbp"
alias cb=$CREATE_BRANCH
alias createb=$CREATE_BRANCH
alias createbranch=$CREATE_BRANCH


CHECKOUT="git checkout"
alias co=$CHECKOUT
__git_complete co _git_checkout


alias com="git checkout master"
alias cod="git checkout develop"


ADD="git add"
alias a=$ADD
alias add=$ADD


ADD_ALL="git add ."
alias aa=$ADD_ALL
alias aall=$ADD_ALL
alias adda=$ADD_ALL
alias addall=$ADD_ALL
alias add_all=$ADD_ALL


COMMIT="git commit"
alias c=$COMMIT
alias comit=$COMMIT
alias commit=$COMMIT


COMMIT_WITH_MESSAGE="git commit -m"
alias cm=$COMMIT_WITH_MESSAGE


ADD_COMMIT="git add . && git commit"
alias ac=$ADD_COMMIT


ADD_COMMIT_WITH_MESSAGE="git add . && git commit -m"
alias acm=$ADD_COMMIT_WITH_MESSAGE


acp()
{
	git add . && git commit -m "$1" && git fetch && git status && git push
}
export -f acp


LOG="git log"
alias dl=$LOG
alias sl=$LOG
alias l=$LOG
alias log=$LOG


DIFF="git diff"
alias df=$DIFF
__git_complete df _git_diff
alias diff=$DIFF
__git_complete diff _git_diff


MERGE="git merge"
alias m=$MERGE
__git_complete m _git_merge
alias merge=$MERGE
__git_complete merge _git_merge


REBASE="git rebase"
alias rebase=$REBASE
__git_complete rebase _git_rebase
alias r=$REBASE
__git_complete r _git_rebase


STASH="git stash"
alias stash=$STASH
alias stsh=$STASH


STASH_APPLY="git stash apply"
alias apply=$STASH_APPLY
alias as=$STASH_APPLY


STASH_PULL_APPLY="git stash && git pull && git stash apply"
alias spa=$STASH_PULL_APPLY


TAGS="git tag --list"
alias tags=$TAGS

LATEST_TAG="git describe --tags \$(git rev-list --tags --max-count=1)"
alias tag=$LATEST_TAG


RESET="git reset"
alias reset=$RESET
__git_complete reset _git_reset


ASSUME_UNCHANGED="git update-index --assume-unchanged"
alias ig=$ASSUME_UNCHANGED
alias ignore=$ASSUME_UNCHANGED


scop()
{
	git stash && git checkout "$1" && git pull
}
export -f scop


# As suggested by https://stackoverflow.com/a/33548037/3867423
remove-gone()
{
	echo 'Removing all local branches that are no longer in remote'
	git fetch -p && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done && git branch --all
}
export -f remove-gone
alias rmg=remove-gone
alias rmgone=remove-gone
alias removegone=remove-gone


EXIT="exit"
alias e=$EXIT
alias ex=$EXIT
alias exti=$EXIT
alias exit=$EXIT
alias eixt=$EXIT
alias eitx=$EXIT


REFRESH="source ~/.bashrc"
alias refresh=$REFRESH


BUILD="./gradlew build"
alias build=$BUILD

CLEAN="./gradlew clean"
alias clean=$CLEAN

RUN="./gradlew"
alias run=$RUN


ALIASES="code ~/.bash-config/.alias-config"
alias aka=$ALIASES

LOCAL_ALIASES="code ~/.bash-config/.local-alias-config"
alias laka=$LOCAL_ALIASES
