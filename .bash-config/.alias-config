#Copyright (C) 2016 Christoph Hennemann
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


AC_SIMPLE_STATUS="git status"
alias ss=$AC_SIMPLE_STATUS
__git_complete ss _git_status


AC_STATUS="git fetch && git status"
alias s=$AC_STATUS
alias stat=$AC_STATUS
alias stats=$AC_STATUS
alias statsu=$AC_STATUS
alias status=$AC_STATUS


AC_FETCH="git fetch --all --prune && git branch --all"
alias f=$AC_FETCH
__git_complete f _git_fetch
alias fetch=$AC_FETCH
__git_complete fetch _git_fetch


AC_PULL="git pull"
alias p=$AC_PULL
__git_complete p _git_pull
alias pll=$AC_PULL
__git_complete pll _git_pull
alias pull=$AC_PULL
__git_complete pull _git_pull


AC_PUSH="git push"
alias psh=$AC_PUSH
__git_complete psh _git_push
alias push=$AC_PUSH
__git_complete push _git_push


AC_PUSH_ORIGIN="git push -u origin"
alias po=$AC_PUSH_ORIGIN
__git_complete po _git_push
alias psho=$AC_PUSH_ORIGIN
__git_complete psho _git_push
alias pshorig=$AC_PUSH_ORIGIN
__git_complete pshorig _git_push
alias pusho=$AC_PUSH_ORIGIN
__git_complete pusho _git_push
alias pushorig=$AC_PUSH_ORIGIN
__git_complete pushorig _git_push
alias pushorigin=$AC_PUSH_ORIGIN
__git_complete pushorigin _git_push


AC_BRANCH="git branch --all"
alias b=$AC_BRANCH
alias branch=$AC_BRANCH
alias lbranch=$AC_BRANCH


AC_RENAME_BRANCH="git branch -m"
alias rb=$AC_RENAME_BRANCH
alias rename=$AC_RENAME_BRANCH
alias renameb=$AC_RENAME_BRANCH
alias renamebranch=$AC_RENAME_BRANCH
alias rename_branch=$AC_RENAME_BRANCH


AC_DELETE_BRANCH="git branch -d"
alias db=$AC_DELETE_BRANCH
__git_complete db _git_branch
alias deleteb=$AC_DELETE_BRANCH
__git_complete deleteb _git_branch


AC_FORCE_DELETE_BRANCH="git branch -D"
alias DB=$AC_FORCE_DELETE_BRANCH
__git_complete DB _git_branch
alias dbf=$AC_FORCE_DELETE_BRANCH
__git_complete dbf _git_branch


cbp()
{
	git checkout -b $1 && git push -u origin $1
}
export -f cbp

AC_CREATE_BRANCH="cbp"
alias cb=$AC_CREATE_BRANCH
alias createb=$AC_CREATE_BRANCH
alias createbranch=$AC_CREATE_BRANCH

mdev()
{
	local x=$(git rev-parse --abbrev-ref HEAD)
	echo "merge develop into $x"
	git checkout develop && git pull && git checkout $x && git merge develop
}


AC_CHECKOUT="git checkout"
alias co=$AC_CHECKOUT
__git_complete co _git_checkout


alias com="git checkout master"
alias cod="git checkout develop"


AC_ADD="git add"
alias a=$AC_ADD
alias add=$AC_ADD


AC_ADD_ALL="git add ."
alias aa=$AC_ADD_ALL
alias aall=$AC_ADD_ALL
alias adda=$AC_ADD_ALL
alias addall=$AC_ADD_ALL
alias add_all=$AC_ADD_ALL


AC_COMMIT="git commit"
alias c=$AC_COMMIT
alias comit=$AC_COMMIT
alias commit=$AC_COMMIT


AC_COMMIT_WITH_MESSAGE="git commit -m"
alias cm=$AC_COMMIT_WITH_MESSAGE


AC_ADD_COMMIT="git add . && git commit"
alias ac=$AC_ADD_COMMIT


AC_ADD_COMMIT_WITH_MESSAGE="git add . && git commit -m"
alias acm=$AC_ADD_COMMIT_WITH_MESSAGE


acp()
{
	git add . && git commit -m "$1" && git fetch && git status && git push
}
export -f acp


AC_LOG="git log"
alias dl=$AC_LOG
alias sl=$AC_LOG
alias l=$AC_LOG
alias log=$AC_LOG


AC_DIFF="git diff"
alias df=$AC_DIFF
__git_complete df _git_diff
alias diff=$AC_DIFF
__git_complete diff _git_diff


AC_MERGE="git merge"
alias m=$AC_MERGE
__git_complete m _git_merge
alias merge=$AC_MERGE
__git_complete merge _git_merge


AC_REBASE="git rebase"
alias rebase=$AC_REBASE
__git_complete rebase _git_rebase
alias r=$AC_REBASE
__git_complete r _git_rebase


AC_STASH="git stash"
alias stash=$AC_STASH
alias stsh=$AC_STASH


AC_STASH_APPLY="git stash apply"
alias apply=$AC_STASH_APPLY
alias as=$AC_STASH_APPLY


AC_STASH_PULL_APPLY="git stash && git pull && git stash apply"
alias spa=$AC_STASH_PULL_APPLY


AC_TAGS="git tag --list"
alias tags=$AC_TAGS

latest-tag()
{
	git pull -q --all && git describe --tags $(git rev-list --tags --max-count=1)
}
export -f latest-tag
alias tag=latest-tag
alias latest=latest-tag


AC_RESET="git reset"
alias reset=$AC_RESET
__git_complete reset _git_reset


AC_ASSUME_UNCHANGED="git update-index --assume-unchanged"
alias ig=$AC_ASSUME_UNCHANGED
alias ignore=$AC_ASSUME_UNCHANGED


# As suggested by https://stackoverflow.com/a/33548037/3867423
remove-gone()
{
	echo 'Removing all local branches that are no longer in remote'
	git fetch -p && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done && git branch --all
}
export -f remove-gone
alias rmg=remove-gone
alias rmgone=remove-gone
alias removegone=remove-gone


AC_EXIT="exit"
alias e=$AC_EXIT
alias ex=$AC_EXIT
alias exti=$AC_EXIT
alias exit=$AC_EXIT
alias eixt=$AC_EXIT
alias eitx=$AC_EXIT


AC_REFRESH="source ~/.bashrc"
alias refresh=$AC_REFRESH


AC_BUILD="./gradlew build"
alias build=$AC_BUILD

AC_CLEAN="./gradlew clean"
alias clean=$AC_CLEAN

AC_RUN="./gradlew"
alias run=$AC_RUN

alias editor=$DEFAULT_EDITOR_COMMAND
alias ide="$DEFAULT_IDE_COMMAND"

AC_ALIASES="$DEFAULT_EDITOR_COMMAND ~/.bash-config/.alias-config"
alias aka=$AC_ALIASES

AC_LOCAL_ALIASES="$DEFAULT_EDITOR_COMMAND ~/.bash-config/.local-alias-config"
alias laka=$AC_LOCAL_ALIASES

AC_UP="cd .."
alias up=$AC_UP

alias home="cd ~"
